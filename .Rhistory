install.packages(c("deSolve", "FME"))
install.packages("/media/stephen/storage/downloads/colourschemes_0.3.tar.gz", repos = NULL, type = "source")
source('~/Downloads/install_R_packages.R')
install.packages("/media/stephen/storage/downloads/colourschemes_0.3.tar.gz", repos = NULL, type = "source")
con <- dbConnect(RMySQL::MySQL(), group = "my-db")
library(RMySQL)
con <- dbConnect(RMySQL::MySQL(), group = "my-db")
)
con <- dbConnect(RMySQL::MySQL(),
group = "my-db",
user = "stephen",
host = "localhost",
password = "Steve&1978"
)
con <- dbConnect(RMySQL::MySQL(),
group = "my-db",
user = "stephen",
host = "localhost",
password = "Steve&1978"
)
con <- dbConnect(RMySQL::MySQL(),
group = "my-db",
user = "stephen",
host = "127.0.0.1",
password = "Steve&1978"
)
con <- dbConnect(RMySQL::MySQL(),
group = "my-db",
user = "root",
host = "127.0.0.1",
password = "1234"
)
con <- dbConnect(RMySQL::MySQL(),
user = "root",
host = "127.0.0.1",
password = "1234"
)
con <- dbConnect(RMySQL::MySQL(),
user = "root",
host = "127.0.0.1",
password = "Steve&1978"
)
con <- dbConnect(RMySQL::MySQL(),
user = "stephen",
host = "127.0.0.1",
password = "asrta03"
)
con <- dbConnect(RMySQL::MySQL(),
user = "stephen",
host = "127.0.0.1",
password = "astra03"
)
mtcars
dbListTables(con)
con <- dbConnect(RMySQL::MySQL(),
user = "stephen",
host = "127.0.0.1",
password = "astra03"
)
dbListTables(con)
?dbconnect
?dbConnect
con <- dbConnect(RMySQL::MySQL(),
dbname = "test",
user = "stephen",
host = "127.0.0.1",
password = "astra03"
)
dbListTables(con)
dbWriteTable(con, "mtcars", mtcars)
dbListTables(con)
con
dbListFields(con, "mtcars")
dbReadTable(con, "mtcars")
frank <- as.data.frame(dbReadTable(con,"mtcars"))
View(frank)
View(dbReadTable(con,"mtcars"))
bob <- mtcars
bob <- NULL
frank <- dbReadTable(con,"mtcars") #create dataframe of mtcars back out of mysql
class(frank)
?"dbListFields"
res <- dbSendQuery(con,"SELECT * FROM mtcars WHERE cyl = 4")
View(res)
res
dbFetch(res) #execute
dbClearResult(res)
res
dbClearResult(res)
dbClearResult
?dbClearResult
res <- dbSendQuery(con, "SELECT * FROM mtcars WHERE cyl = 4")
res <- dbSendQuery(con, "SELECT * FROM mtcars WHERE cyl = 4")
while(!dbHasCompleted(res)){
chunk <- dbFetch(res, n=5)
print(nrow(chunk))
}
res
chunk
#get a chunk at a time (e.g if dataset is big)
res <- dbSendQuery(con, "SELECT * FROM mtcars WHERE cyl = 4")
while(!dbHasCompleted(res)){
chunk <- dbFetch(res, n=5)
print(nrow(chunk))
print(chunk)
}
dbFetch(res)
#get a chunk at a time (e.g if dataset is big)
res <- dbSendQuery(con, "SELECT * FROM mtcars WHERE cyl = 4")
while(!dbHasCompleted(res)){
chunk <- dbFetch(res, n=5)
print(nrow(chunk))
print(chunk)
}
dbFetch(res)
res <- dbSendQuery(con,"SELECT * FROM mtcars WHERE cyl = 4") #set up the query
dbClearResult(res) #close the request - important for big retrievals.
dbFetch(res) #execute
dbClearResult(res) #close the request - important for big retrievals.
res <- dbSendQuery(con,"SELECT * FROM mtcars WHERE cyl = 4") #set up the query
dbFetch(res) #execute
dbClearResult(res) #close the request - important for big retrievals.
res <- dbSendQuery(con, "SELECT * FROM mtcars WHERE cyl = 4")
while(!dbHasCompleted(res)){
chunk <- dbFetch(res, n=5)
print(nrow(chunk))
print(chunk)
}
dbDisconnect(con) #disconnect from sql database server
View(chunk)
source('~/Desktop/RMySQL_tutorial.R')
install.packages("devtools")
install.packages("devtools")
?dbConnect
install.packages("RSQLite")
library(RSQLite)
?RSQLite
?RSQlite
?RSQLite
library(RSQLite)
q()
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
library(datasets)
ToothData
ToothGrowth
data <- ToothGrowth
```
boxplot(data$supp)
data$supp
subset(data, data$supp == "VC")
data_supp <- subset(data, data$supp == "VC")
data_vc <- subset(data, data$supp == "OJ")
boxplot()
boxplot(data$supp, data$len)
summary(data)
summary(data_supp)
boxplot(data$dose, data$len)
boxplot(data$dose)
plot(data)
boxplot(supp~len, data=data)
boxplot(dose~len, data=data)
boxplot(dose~len, data=data_supp)
boxplot(len~dose, data=data_supp)
boxplot(len~supp, data=data)
library(gridExtra)
plot1a <- boxplot(len~supp, data=data)
plot1b <- boxplot(len~dose, data=data)
plot1a <- boxplot(len~supp, data=data)
plot1b <- boxplot(len~dose, data=data)
grid.arrange(plot1a, plot1b, ncol=2)
plot1a
print(plot1a)
plot1a <- ggplot(data, aes(factor(len),supp))
library(ggplot2)
plot1a <- ggplot(data, aes(factor(len),supp))
plot1a
plot1b <- ggplot(data, aes(factor(len),dose))
grid.arrange(plot1a, plot1b, ncol=2)
plot1a + geom(boxplot())
plot1a + geom(boxplot())
library(ggplot2)
plot1a + geom_boxplot()
plot1a <- ggplot(data, aes(factor(len),supp))
plot1a + geom_boxplot() + geom_jitter()
plot1b <- ggplot(data, aes(factor(len),dose))
plot1b + geom_boxplot() + geom_jitter()
plot1a <- ggplot(data, aes(factor(supp),len))
plot1a + geom_boxplot() + geom_jitter()
plot1a <- ggplot(data, aes(factor(supp),len))
plot1a + geom_boxplot()
plot1b <- ggplot(data, aes(factor(dose),len))
plot1b + geom_boxplot() + geom_jitter()
grid.arrange(plot1a, plot1b, ncol=2)
dev.off()
plot1b <- ggplot(data, aes(factor(dose),len) + geom_boxplot() + geom_jitter() )
plot1a <- ggplot(data, aes(factor(supp),len))
plot1a <- plot1a + geom_boxplot() + geom_jitter()
plot1b <- ggplot(data, aes(factor(dose),len))
plot1b <- plot1b + geom_boxplot() + geom_jitter()
grid.arrange(plot1a, plot1b, ncol=2)
frank <- summary(data)
plot(frank)
summary(data, data$len~data$supp)
summary(data)
?ToothGrowth
library(deSolve)
?deSolve
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('/media/stephen/2AB4135CB4132A39/Users/schec/My Documents/coursera/data products/pred_prey.R')
source('/media/stephen/2AB4135CB4132A39/Users/schec/My Documents/coursera/data products/pred_prey.R')
source('/media/stephen/2AB4135CB4132A39/Users/schec/My Documents/coursera/data products/pred_prey.R')
source('/media/stephen/2AB4135CB4132A39/Users/schec/My Documents/coursera/data products/pred_prey.R')
source('/media/stephen/2AB4135CB4132A39/Users/schec/My Documents/coursera/data products/pred_prey.R')
?manipulate
library(manipulate)
library(shiny)
install.packages("shiny")
library(shiny)
manipuate
manipulate
install.packages("manipulate")
library(manipulate)
?"manipulate"
library(manipulate)
?"manipulate"
require(devtools)
library(devtools)
install_github('rCharts', 'ramnathv')
library(rCharts)
nplot
library(rCharts)
nplot
nPlot
?nPlot
?cat
x=seq(1:10,1)
x=seq(1:10)
y=seq(1:10)
x=c(2,4,2,6,7,3,2)
plot(x,y)
x=c(2,4,2,6,7,3,2,5,2,8)
plot(x,y)
nPlot(x,y)
nPlot(x~y)
install.packages(c("lme4", "RcppArmadillo", "rootSolve"))
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
library(slidify)
gsub()
?gsub
rPlot
?rPlot
source('~/.active-rstudio-document')
rPlot(SepalLength ~ SepalWidth | Species, data = iris, type = 'point', color = 'Species')
install.packages("rjson")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
install.packages("morrs")
install.packages("morris")
install.packages("leaflet")
install.packages("highchart")
install.packages("googleVis")
library(googleVis)
?"googleVis"
M <- gvisMotionChart(Fruits,"Fruits","year", options = list(width=600,height=400))
M <- gvisMotionChart(Fruits,"Fruit","year", options = list(width=600,height=400))
M <- gvisMotionChart(Fruits,"Fruit","Year", options = list(width=600,height=400))
plot(M)
library(googleVis)
demo(googleVis)
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='stevecheckley',
token='DE3DD8F99B22DA188002E7B29C34F64D',
secret='0+u+F6EXIsEfWQ7rQ0Ymb4FwU9VfPCNePfuGBNdv')
install_github("ropensci/plotly")
library("devtools")
install_github("ropensci/plotly")
library(plotly)
library(plotly)
?plotly
plotly(username="scheckley",key="3k0qtwfiis")
plot_ly
?plot_ly
shiny::runApp('/media/stephen/2AB4135CB4132A39/Users/schec/My Documents/coursera/data products/enzyme_kinetics/shiny_mm')
library("shinyapps", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
setwd("/media/stephen/2AB4135CB4132A39/Users/schec/My Documents/coursera/data products/enzyme_kinetics/shiny_mm")
shinyapps::deployApp(""/media/stephen/2AB4135CB4132A39/Users/schec/My Documents/coursera/data products/enzyme_kinetics/shiny_mm")
shinyapps::deployApp("/media/stephen/2AB4135CB4132A39/Users/schec/My Documents/coursera/data products/enzyme_kinetics/shiny_mm")
